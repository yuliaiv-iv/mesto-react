{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/ImagePopup.js","utils/api.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ConfirmPopup.js","components/App.js","serviceWorker.js","index.js","images/logo.svg"],"names":["Header","className","src","logo","alt","CurrentUserContext","React","createContext","Card","props","currentUser","useContext","isOwn","card","owner","_id","isLiked","likes","some","like","cardDeleteButtonClassName","cardLikeButtonClassName","link","name","onClick","onCardClick","type","aria-label","onCardDelete","onCardLike","length","Main","avatar","onEditAvatar","onEditProfile","about","onAddPlace","cards","map","key","Footer","ImagePopup","isOpen","onClose","api","options","this","_baseUrl","baseUrl","_headers","headers","res","ok","json","Promise","reject","status","fetch","then","_checkStatus","data","method","body","JSON","stringify","cardId","authorization","PopupWithForm","title","onSubmit","action","noValidate","children","isDisabled","disabled","button","EditProfilePopup","useState","isValid","setIsValid","validationMessage","setValidationMessage","inputValue","setInputValue","isFormValid","Object","values","every","Boolean","handleInputChange","event","target","value","validity","valid","useEffect","preventDefault","onUpdateUser","onChange","id","placeholder","required","minLength","maxLength","EditAvatarPopup","enabled","avatarRef","useRef","setDisabled","current","onUpdateAvatar","ref","AddPlacePopup","ConfirmPopup","onDelete","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isImagePopupOpen","setIsImagePopupOpen","isDeletePopupOpen","setDeletePopupOpen","undefined","selectedCard","setSelectedCard","isloading","setIsLoading","setCurrentUser","setCards","closeAllPopups","all","getUserData","getInitialCards","info","catch","err","console","log","Provider","changeLikeStatus","newCard","newCards","c","setUserData","result","finally","setUserAvatarData","postNewCard","deleteCard","filter","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.da04e06f.chunk.js","sourcesContent":["import React from 'react';\r\nimport logo from '../images/logo.svg';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"header\">\r\n            <img className=\"header__logo\"\r\n                src={logo}\r\n                alt=\"Логотип\" />\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();","import React from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction Card(props) {\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n    const isOwn = props.card.owner._id === currentUser._id;\r\n    const isLiked = props.card.likes.some(like => like._id === currentUser._id);\r\n    const cardDeleteButtonClassName = (\r\n        `button__delete button opacity ${isOwn ? 'button_visible' : ''}`\r\n    );\r\n    const cardLikeButtonClassName = (\r\n        `button__like button opacity ${isLiked ? 'button__like_active' : ''}`\r\n    );\r\n\r\n    function handleClick() {\r\n        props.onCardClick(props.card);\r\n    }\r\n    function handleLikeClick() {\r\n        props.onCardLike(props.card)\r\n    }\r\n    function handleDeleteClick() {\r\n        props.onCardDelete(props.card)\r\n    }\r\n\r\n    return (\r\n        <li className=\"card\">\r\n            <img\r\n                className=\"card__image\"\r\n                src={props.card.link} alt={props.card.name}\r\n                onClick={handleClick}\r\n            />\r\n            <button\r\n                type=\"button\"\r\n                aria-label=\"удалить элемент\"\r\n                className={cardDeleteButtonClassName}\r\n                onClick={handleDeleteClick}>\r\n            </button>\r\n            <div className=\"card__info\">\r\n                <h3 className=\"card__title\" >{props.card.name}</h3>\r\n                <div className=\"card__like\">\r\n                    <button\r\n                        type=\"button\"\r\n                        aria-label=\"выразить положительную реакцию\"\r\n                        className={cardLikeButtonClassName}\r\n                        onClick={handleLikeClick}>\r\n                    </button>\r\n                    <div className=\"card__like-counter\">{props.card.likes.length}</div>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card.js';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\r\n\r\nfunction Main(props) {\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n\r\n    return (\r\n        <main className=\"content\">\r\n            <section className=\"profile\">\r\n                <div className=\"profile__avatar\">\r\n                    <img\r\n                        className=\"profile__image\"\r\n                        src={currentUser.avatar}\r\n                        alt=\"Фотография профиля\"\r\n                    />\r\n                    <div className=\"profile__cover\">\r\n                        <button\r\n                            onClick={props.onEditAvatar}\r\n                            type=\"button\"\r\n                            className=\"button profile__button-avatar\"\r\n                            aria-label=\"обновить фотографию пользователя\">\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"profile__info\">\r\n                    <h1 className=\"profile__name\">{currentUser.name}</h1>\r\n                    <button\r\n                        onClick={props.onEditProfile}\r\n                        type=\"button\"\r\n                        aria-label=\"обновить информацию пользователя\"\r\n                        className=\"button profile__button-edit opacity\">\r\n                    </button>\r\n                    <p className=\"profile__about\">{currentUser.about}</p>\r\n                </div>\r\n                <button\r\n                    onClick={props.onAddPlace}\r\n                    type=\"button\"\r\n                    aria-label=\"добавить новую карточку\"\r\n                    className=\"button profile__button-add opacity\">\r\n                </button>\r\n            </section>\r\n            <section className=\"card-container\">\r\n                <ul className=\"card-container__list\">\r\n                    {props.cards.map(card => <Card {...card}\r\n                        onCardClick={props.onCardClick}\r\n                        onCardLike={props.onCardLike}\r\n                        onCardDelete={props.onCardDelete}\r\n                        key={card._id}\r\n                        card={card} />)}\r\n                </ul>\r\n            </section>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nfunction ImagePopup(props) {\r\n    return (\r\n        <section className={`popup popup_type_image ${props.isOpen ? \"popup_open\" : \"\"}`}>\r\n            <figure className=\"popup__container popup__container_image\">\r\n                <button\r\n                    type=\"button\"\r\n                    aria-label=\"закрыть модальное окно\"\r\n                    className=\"button popup__close opacity\"\r\n                    onClick={props.onClose}>\r\n                </button>\r\n                <img\r\n                    className=\"popup__view\"\r\n                    src={props.card ? props.card.link : \"\"}\r\n                    alt={props.card ? props.card.name : \"\"}\r\n                />\r\n                <figcaption\r\n                    className=\"popup__title popup__title_image\">\r\n                    {props.card ? props.card.name : ''}\r\n                </figcaption>\r\n            </figure>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ImagePopup;","export class Api {\r\n    constructor(options) {\r\n        this._baseUrl = options.baseUrl;\r\n        this._headers = options.headers;\r\n    }\r\n\r\n    _checkStatus(res) {\r\n        if (res.ok) {\r\n            return res.json()\r\n        }\r\n        return Promise.reject(`Что-то пошло не так: ${res.status}`);\r\n    }\r\n\r\n    getInitialCards() {\r\n        return fetch(`${this._baseUrl}/cards`, {\r\n            headers: this._headers\r\n        })\r\n            .then(this._checkStatus);\r\n    }\r\n\r\n    getUserData() {\r\n        return fetch(`${this._baseUrl}/users/me`, {\r\n            headers: this._headers,\r\n\r\n        })\r\n            .then(this._checkStatus);\r\n    }\r\n\r\n    postNewCard(data) {\r\n        return fetch(`${this._baseUrl}/cards`, {\r\n            headers: this._headers,\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                name: data.name,\r\n                link: data.link\r\n            })\r\n        })\r\n            .then(this._checkStatus);\r\n    }\r\n\r\n    setUserData(data) {\r\n        return fetch(`${this._baseUrl}/users/me`, {\r\n            headers: this._headers,\r\n            method: 'PATCH',\r\n            body: JSON.stringify({\r\n                name: data.name,\r\n                about: data.about\r\n            })\r\n        })\r\n            .then(this._checkStatus);\r\n    }\r\n\r\n    setUserAvatarData(data) {\r\n        return fetch(`${this._baseUrl}/users/me/avatar`, {\r\n            headers: this._headers,\r\n            method: 'PATCH',\r\n            body: JSON.stringify({\r\n                avatar: data.link\r\n            })\r\n        })\r\n            .then(this._checkStatus);\r\n    }\r\n\r\n    deleteCard(cardId) {\r\n        return fetch(`${this._baseUrl}/cards/${cardId}`, {\r\n            headers: this._headers,\r\n            method: 'DELETE'\r\n        })\r\n            .then(this._checkStatus);\r\n    }\r\n\r\n    changeLikeStatus(cardId, like) {\r\n        return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\r\n            method: like ? 'PUT' : 'DELETE',\r\n            headers: this._headers\r\n        })\r\n            .then(this._checkStatus);\r\n    }\r\n\r\n    // deleteLike(cardId) {\r\n    //     return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\r\n    //         method: 'DELETE',\r\n    //         headers: this._headers\r\n    //     })\r\n    //         .then(this._checkStatus);\r\n    // }\r\n}\r\n\r\nexport const api = new Api({\r\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-14',\r\n    headers: {\r\n        authorization: '4905795f-d4f5-4259-8ab1-1154380da5eb',\r\n        'Content-Type': 'application/json'\r\n    }\r\n}); \r\n","import React from 'react';\r\n\r\nfunction PopupWithForm(props) {\r\n    return (\r\n        <section className={`popup popup_type_${props.name} ${props.isOpen ? \"popup_open\" : \"\"}`}>\r\n            <div className=\"popup__container\">\r\n                <button\r\n                    type=\"button\"\r\n                    aria-label=\"закрыть модальное окно\"\r\n                    className=\"button popup__close opacity\"\r\n                    onClick={props.onClose}>\r\n                </button>\r\n                <h3 className=\"popup__title\">{props.title}</h3>\r\n                <form\r\n                    name={props.name}\r\n                    onSubmit={props.onSubmit}\r\n                    className=\"popup__form\"\r\n                    action=\"#\"\r\n                    method=\"POST\"\r\n                    noValidate>\r\n                    {props.children}\r\n                    <button\r\n                        type=\"submit\"\r\n                        className={`button popup__button-submit ${props.isDisabled ? 'popup__button-submit_disabled' : ''}`}\r\n                        disabled={props.isDisabled}>\r\n                        {props.onClick ? \"Сохранение...\" : props.button}\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default PopupWithForm;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\r\n\r\nfunction EditProfilePopup(props) {\r\n\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n    const [isValid, setIsValid] = React.useState({ name: true, about: true });\r\n    const [validationMessage, setValidationMessage] = React.useState({ name: '', about: '', });\r\n    const [inputValue, setInputValue] = React.useState({ name: '', about: '' });\r\n    const isFormValid = Object.values(isValid).every(Boolean);\r\n\r\n    React.useEffect(() => {\r\n        setInputValue({\r\n            name: currentUser.name || '',\r\n            about: currentUser.about || ''\r\n        });\r\n    }, [currentUser]);\r\n\r\n    function handleInputChange(event) {\r\n        const { name, value } = event.target;\r\n        setInputValue({\r\n            ...inputValue,\r\n            [name]: value,\r\n        });\r\n        setIsValid({\r\n            ...isValid,\r\n            [name]: event.target.validity.valid,\r\n        })\r\n        setValidationMessage({\r\n            ...validationMessage,\r\n            [name]: event.target.validationMessage,\r\n        })\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        props.onUpdateUser({\r\n            name: inputValue.name,\r\n            about: inputValue.about\r\n        });\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        setInputValue({\r\n            name: currentUser.name,\r\n            about: currentUser.about\r\n        });\r\n        setValidationMessage({ name: '', about: '', });\r\n    }, [props.isOpen])\r\n\r\n    return (\r\n        <PopupWithForm\r\n            title=\"Редактировать профиль\"\r\n            name=\"edit\"\r\n            button=\"Сохранить\"\r\n            isOpen={props.isOpen}\r\n            onClose={props.onClose}\r\n            onClick={props.onClick}\r\n            isDisabled={!isFormValid}\r\n            onSubmit={handleSubmit}>\r\n            <label className=\"popup__field\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={inputValue.name}\r\n                    onChange={handleInputChange}\r\n                    id=\"name-input\"\r\n                    className=\"popup__item\"\r\n                    name=\"name\"\r\n                    placeholder=\"Имя\"\r\n                    required\r\n                    minLength=\"2\" maxLength=\"40\" />\r\n                <span id=\"name-input-error\" className={!isValid.name ? 'popup__item-error' : \"\"}>{validationMessage.name}</span>\r\n            </label>\r\n            <label className=\"popup__field\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={inputValue.about}\r\n                    onChange={handleInputChange}\r\n                    id=\"about-input\"\r\n                    className=\"popup__item\"\r\n                    name=\"about\"\r\n                    placeholder=\"О себе\"\r\n                    required\r\n                    minLength=\"2\" maxLength=\"200\" />\r\n                <span id=\"name-input-error\" className={!isValid.about ? 'popup__item-error' : \"\"}>{validationMessage.about}</span>\r\n            </label>\r\n        </PopupWithForm>\r\n    )\r\n}\r\n\r\nexport default EditProfilePopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction EditAvatarPopup(props, enabled) {\r\n    const avatarRef = React.useRef('');\r\n    const [isValid, setIsValid] = React.useState(false);\r\n    const [validationMessage, setValidationMessage] = React.useState('');\r\n    const [disabled, setDisabled] = React.useState(enabled);\r\n\r\n    function handleChange(event) {\r\n        if (!event.target.validity.valid) {\r\n            setIsValid(true)\r\n            setValidationMessage(event.target.validationMessage)\r\n            setDisabled(enabled)\r\n        } else {\r\n            setIsValid(false)\r\n            setValidationMessage('')\r\n            setDisabled(!enabled)\r\n        }\r\n    };\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        props.onUpdateAvatar({\r\n            link: avatarRef.current.value,\r\n        });\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        avatarRef.current.value = '';\r\n        setValidationMessage('');\r\n        setDisabled(enabled)\r\n    }, [props.isOpen])\r\n\r\n    // function handleClose() {\r\n    //     props.onClose();\r\n    //     setValidationMessage('');\r\n    //     avatarRef.current.value = '';\r\n    // }\r\n\r\n    return (\r\n        <PopupWithForm\r\n            title=\"Обновить аватар\"\r\n            name=\"avatar\"\r\n            button=\"Сохранить\"\r\n            isOpen={props.isOpen}\r\n            onClick={props.onClick}\r\n            isDisabled={disabled}\r\n            onClose={props.onClose}\r\n            onSubmit={handleSubmit}>\r\n            <label className=\"popup__field\">\r\n                <input\r\n                    ref={avatarRef}\r\n                    type=\"url\"\r\n                    onChange={handleChange}\r\n                    id=\"link-input\"\r\n                    className=\"popup__item\"\r\n                    name=\"link\"\r\n                    placeholder=\"Ссылка на картинку\"\r\n                    required />\r\n                <span id=\"link-input-error\" className={isValid ? 'popup__item-error' : \"\"}>{validationMessage}</span>\r\n            </label>\r\n        </PopupWithForm>\r\n    )\r\n}\r\n\r\nexport default EditAvatarPopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction AddPlacePopup(props) {\r\n    const [inputValue, setInputValue] = React.useState({ name: '', link: '', });\r\n    const [isValid, setIsValid] = React.useState({ name: false, link: false });\r\n    const [validationMessage, setValidationMessage] = React.useState({ name: '', link: '' });\r\n    let isFormValid = Object.values(isValid).every(Boolean);\r\n\r\n    function handleInputChange(event) {\r\n        const { name, value } = event.target;\r\n        setInputValue({\r\n            ...inputValue,\r\n            [name]: value,\r\n        });\r\n        setIsValid({\r\n            ...isValid,\r\n            [name]: event.target.validity.valid,\r\n        })\r\n        setValidationMessage({\r\n            ...validationMessage,\r\n            [name]: event.target.validationMessage,\r\n        })\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        props.onAddPlace({\r\n            name: inputValue.name,\r\n            link: inputValue.link,\r\n        });\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        setInputValue({ name: '', link: '' });\r\n        setValidationMessage({ name: '', link: '' });\r\n        setIsValid({ name: false, link: false });\r\n    }, [props.isOpen])\r\n\r\n    return (\r\n        <PopupWithForm\r\n            title=\"Новое место\"\r\n            name=\"add\"\r\n            button=\"Создать\"\r\n            isOpen={props.isOpen}\r\n            onClick={props.onClick}\r\n            onClose={props.onClose}\r\n            isDisabled={!isFormValid}\r\n            onSubmit={handleSubmit}>\r\n            <label className=\"popup__field\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={inputValue.name}\r\n                    id=\"title-input\"\r\n                    className=\"popup__item\"\r\n                    name=\"name\"\r\n                    placeholder=\"Название\"\r\n                    required\r\n                    minLength=\"1\" maxLength=\"30\"\r\n                    onChange={handleInputChange} />\r\n                <span id=\"title-input-error\" className={!isValid.name ? 'popup__item-error' : \"\"}>{validationMessage.name}</span>\r\n            </label>\r\n            <label className=\"popup__field\">\r\n                <input\r\n                    type=\"url\"\r\n                    value={inputValue.link}\r\n                    id=\"link-input\"\r\n                    className=\"popup__item\"\r\n                    name=\"link\"\r\n                    placeholder=\"Ссылка на картинку\"\r\n                    required\r\n                    onChange={handleInputChange} />\r\n                <span id=\"title-input-error\" className={!isValid.link ? 'popup__item-error' : \"\"}>{validationMessage.link}</span>\r\n            </label>\r\n        </PopupWithForm>\r\n    )\r\n}\r\n\r\nexport default AddPlacePopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\n\r\nfunction ConfirmPopup(props) {\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        props.onDelete(props.card)\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm\r\n            title=\"Вы уверены?\"\r\n            name=\"delete\"\r\n            button=\"Да\"\r\n            isOpen={props.isOpen}\r\n            onClose={props.onClose}\r\n            onSubmit={handleSubmit}\r\n        >\r\n        </PopupWithForm>\r\n    )\r\n}\r\n\r\nexport default ConfirmPopup;","import React from 'react';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport ImagePopup from './ImagePopup';\r\nimport { api } from '../utils/api.js';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\nimport ConfirmPopup from './ConfirmPopup';\r\n\r\nfunction App() {\r\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\r\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\r\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\r\n    const [isImagePopupOpen, setIsImagePopupOpen] = React.useState(false);\r\n    const [isDeletePopupOpen, setDeletePopupOpen] = React.useState(false);\r\n    const [selectedCard, setSelectedCard] = React.useState(undefined);\r\n    const [isloading, setIsLoading] = React.useState(false);\r\n    const [currentUser, setCurrentUser] = React.useState({});\r\n    const [cards, setCards] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        Promise.all([api.getUserData(), api.getInitialCards()])\r\n            .then(([info, card]) => {\r\n                setCurrentUser(info);\r\n                setCards(card);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }, [])\r\n\r\n    function handleCardLike(card) {\r\n        const isLiked = card.likes.some(like => like._id === currentUser._id);\r\n        api.changeLikeStatus(card._id, !isLiked).then((newCard) => {\r\n            const newCards = cards.map((c) => c._id === card._id ? newCard : c);\r\n            setCards(newCards);\r\n        });\r\n    }\r\n\r\n    function handleCardDelete(card) {\r\n        api.deleteCard(card._id).then(() => {\r\n            const newCards = cards.filter((c) => c._id !== card._id);\r\n            setCards(newCards);\r\n            closeAllPopups()\r\n        })\r\n    }\r\n\r\n    function handleDeleteClick(card) {\r\n        setSelectedCard(card)\r\n        setDeletePopupOpen(true);\r\n    }\r\n\r\n    function handleCardClick(card) {\r\n        setSelectedCard(card);\r\n        setIsImagePopupOpen(true);\r\n    }\r\n\r\n    function handleEditProfileClick() {\r\n        setIsEditProfilePopupOpen(true);\r\n    }\r\n\r\n    function handleAddPlaceClick() {\r\n        setIsAddPlacePopupOpen(true);\r\n    }\r\n\r\n    function handleEditAvatarClick() {\r\n        setIsEditAvatarPopupOpen(true);\r\n    }\r\n\r\n    function closeAllPopups() {\r\n        setIsEditProfilePopupOpen(false);\r\n        setIsAddPlacePopupOpen(false);\r\n        setIsEditAvatarPopupOpen(false);\r\n        setIsImagePopupOpen(false);\r\n        setDeletePopupOpen(false);\r\n        setSelectedCard();\r\n    }\r\n\r\n    function handleUpdateUser(data) {\r\n        setIsLoading(true)\r\n        api.setUserData(data)\r\n            .then((result) => {\r\n                setCurrentUser(result);\r\n                closeAllPopups();\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n            .finally(() => {\r\n                setIsLoading(false);\r\n            });\r\n    }\r\n\r\n    function handleUpdateAvatar(data) {\r\n        setIsLoading(true)\r\n        api.setUserAvatarData(data)\r\n            .then(result => {\r\n                setCurrentUser(result);\r\n                closeAllPopups();\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n            .finally(() => {\r\n                setIsLoading(false);\r\n            });\r\n    }\r\n\r\n    function handleAddPlaceSubmit(card) {\r\n        setIsLoading(true)\r\n        api.postNewCard(card)\r\n            .then(result => {\r\n                setCards([result, ...cards]);\r\n                closeAllPopups();\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n            .finally(() => {\r\n                setIsLoading(false);\r\n            });\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"page\">\r\n                <CurrentUserContext.Provider value={currentUser}>\r\n                    <Header />\r\n                    <div className=\"container\">\r\n                        <Main\r\n                            cards={cards}\r\n                            onEditProfile={handleEditProfileClick}\r\n                            onAddPlace={handleAddPlaceClick}\r\n                            onEditAvatar={handleEditAvatarClick}\r\n                            onCardClick={handleCardClick}\r\n                            onCardLike={handleCardLike}\r\n                            onCardDelete={handleDeleteClick}\r\n                        />\r\n                        <Footer />\r\n                        <EditProfilePopup\r\n                            isOpen={isEditProfilePopupOpen}\r\n                            onClick={isloading}\r\n                            onClose={closeAllPopups}\r\n                            onUpdateUser={handleUpdateUser}\r\n                        />\r\n                        <EditAvatarPopup\r\n                            isOpen={isEditAvatarPopupOpen}\r\n                            onClick={isloading}\r\n                            onClose={closeAllPopups}\r\n                            onUpdateAvatar={handleUpdateAvatar}\r\n                        />\r\n                        <AddPlacePopup\r\n                            isOpen={isAddPlacePopupOpen}\r\n                            onClick={isloading}\r\n                            onClose={closeAllPopups}\r\n                            onAddPlace={handleAddPlaceSubmit}\r\n                        />\r\n                        <ImagePopup\r\n                            isOpen={isImagePopupOpen}\r\n                            card={selectedCard}\r\n                            onClose={closeAllPopups}\r\n                        />\r\n                        <ConfirmPopup\r\n                            isOpen={isDeletePopupOpen}\r\n                            onClose={closeAllPopups}\r\n                            onDelete={handleCardDelete}\r\n                            card={selectedCard}\r\n                        />\r\n                    </div>\r\n                </CurrentUserContext.Provider>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.855a8c98.svg\";"],"sourceRoot":""}